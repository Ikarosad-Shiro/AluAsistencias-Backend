const bcrypt = require('bcryptjs');
const User = require('../models/User'); // Importamos el modelo de usuario

// üî• Obtener la lista de usuarios (sin contrase√±as)
const obtenerUsuarios = async (req, res) => {
    try {
        const usuarios = await User.find({}, '-password'); // Excluimos la contrase√±a
        res.status(200).json(usuarios);
    } catch (error) {
        console.error("‚ùå Error al obtener usuarios:", error);
        res.status(500).json({ message: "Error al obtener usuarios" });
    }
};

// üìå Verificar contrase√±a antes de eliminar o desactivar usuario
const verificarContrase√±a = async (req, res) => {
    try {
        const { contrase√±a } = req.body;
        const usuario = await User.findById(req.user.id);

        if (!usuario) {
            return res.status(404).json({ message: 'Usuario no encontrado' });
        }

        const esValida = await bcrypt.compare(contrase√±a, usuario.password);
        if (!esValida) {
            return res.status(401).json({ message: 'Contrase√±a incorrecta' });
        }

        res.json({ valido: true }); // ‚úÖ Devuelve un objeto JSON con "valido: true"

    } catch (error) {
        console.error('‚ùå Error verificando contrase√±a:', error);
        res.status(500).json({ message: 'Error en el servidor' });
    }
};

module.exports = { obtenerUsuarios, verificarContrase√±a };
